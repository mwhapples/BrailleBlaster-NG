/*
 * Copyright (C) 2025 American Printing House for the Blind
 *
 * This program is free software: you can redistribute it and/or modify it
 * under the terms of the GNU General Public License as published by the Free
 * Software Foundation, version 3.
 *
 * This program is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for
 * more details.
 *
 * You should have received a copy of the GNU General Public License along
 * with this program. If not, see <https://www.gnu.org/licenses/>.
 */
package org.brailleblaster.perspectives.braille.ui.contractionRelaxer

import org.brailleblaster.perspectives.braille.ui.contractionRelaxer.ContractionRelaxer.Unit

class UnitList() {

  companion object {
    //Note that this omits math contractions, which are handled completely differently than text substitutions.
    //Honestly I'm not sure how we'd do math subs at all...this has creeped far beyond what I thought it would take.

    /*
      Units and corresponding rulesets:
      2: Alphabetic Wordsigns [single letter word substitutions]
      3: Strong Contractions (and, for, of, the with), Capital and Ending Punctuation
      4: Math Signs
      5: Single Cell Punctuation and Shortform Words
      6: Strong Groupsigns (ch, sh, th, wh, ou, st), Wordsigns, and Shortform Words
      7: Strong Groupsigns (ar, er, ed, gh, ow, ing) and Shortform Words
      8: Modes: Contracted, Uncontracted, and Grade 1 Indicator
      9: Initial-Letter Contractions: Dot 5 Indicator
      10: Fractions, Mixed Numbers, Slashes, and Grouping Signs
      11: Two-Cell Punctuation and Shortform Words
      12: More Initial-Letter Contractions: Dots 4-5 Indicator and Dot 4-5-6 Indicator
      13: Typeform Mode, Passage Mode
      14: Lower Wordsigns (his, was, were, be, in, enough) and Shortform Words
      15: Lower Groupsigns (be, con, dis, ea, bb, cc, ff, gg, in, en) and Shortform Words
      16: Shapes, Omissions, and Geometric Symbols
      17: Final-letter Groupsigns: Dot 4-6 Indicator, Dot 5-6 Indicator
      18: Less Common Math Symbols and Spatial Math
      19: Less Common Punctuation Symbols and Roman Numerals
      20: Braille Specific Symbols and Formatting
     */

    //Units directly based off LibLouis UEB grade 2 items. If these don't translate things right, nothing will.
    val FullUncontracted = Unit(
      "Fully Uncontracted (Grade 1 UEB)", listOf()
    )

    //Alphabetic wordsigns
    val Unit2 = Unit(
      "Unit 2: Alphabetic Wordsigns", listOf(
        """multind 56-6 nocontractsign capsletter""",
        //punctuation
        """seqdelimiter -—""",
        """seqdelimiter ‑""",
        """seqdelimiter –""",
        """seqdelimiter —""",
        """seqdelimiter ―""",
        """seqbeforechars ([{"“'‘""",
        """seqafterchars  )]}"”'’.,;:.!?…""",
        """seqafterpattern 'd""",
        """seqafterpattern 'll""",
        """seqafterpattern 're""",
        """seqafterpattern 's""",
        """seqafterpattern 't""",
        """seqafterpattern 've""",
        """seqafterpattern ’d""",
        """seqafterpattern ’ll""",
        """seqafterpattern ’re""",
        """seqafterpattern ’s""",
        """seqafterpattern ’t""",
        """seqafterpattern ’ve""",
        /*
        //These guys cause the 128 char limit problem, wtf?
        //Maybe because the prior ones already cover these? Is LibLouis case-sensitive or not?
        """seqafterpattern 'D""",
        """seqafterpattern 'LL""",
        """seqafterpattern 'RE""",
        """seqafterpattern 'S""",
        """seqafterpattern 'T""",
        """seqafterpattern 'VE""",
        """seqafterpattern ’D""",
        """seqafterpattern ’LL""",
        """seqafterpattern ’RE""",
        """seqafterpattern ’S""",
        """seqafterpattern ’T""",
        """seqafterpattern ’VE""",
         */
        """seqafterexpression '([DSTdst]|ll|[rv]e|LL|[RV]E)""",
        """seqafterexpression ’([DSTdst]|ll|[rv]e|LL|[RV]E)""",
        """match %[^_]|%[^_~]%<*[([{] ; %[^_]|[)}\\]]%>*%[^_~] 56-23""",
        """match %[^_~]%<* . %a 56-256""",
        """match %[^_~]%<* : %a 56-25""",
        """match %[^_~]%<* ; %a 56-23""",
        //wordsigns
        """match %[^_~]%<* as (['’]([DSTdst]|ll|[rv]e|LL|[RV]E))?%>*%[^_~] 1356""",
        """match %[^_~]%<* but (['’]([DSTdst]|ll|[rv]e|LL|[RV]E))?%>*%[^_~] 12""",
        """match %[^_~]%<* can (['’]([DSTdst]|ll|[rv]e|LL|[RV]E))?%>*%[^_~] 14""",
        """match %[^_~]%<* do (['’]([DSTdst]|ll|[rv]e|LL|[RV]E))?%>*%[^_~] 145""",
        """match %[^_~]%<* every (['’]([DSTdst]|ll|[rv]e|LL|[RV]E))?%>*%[^_~] 15""",
        """match %[^_~]%<* from (['’]([DSTdst]|ll|[rv]e|LL|[RV]E))?%>*%[^_~] 124""",
        """match %[^_~]%<* go (['’]([DSTdst]|ll|[rv]e|LL|[RV]E))?%>*%[^_~] 1245""",
        """match %[^_~]%<* have (['’]([DSTdst]|ll|[rv]e|LL|[RV]E))?%>*%[^_~] 125""",
        """match %[^_~]%<* it (['’]([DSTdst]|ll|[rv]e|LL|[RV]E))?%>*%[^_~] 1346""",
        """match %[^_~]%<* just (['’]([DSTdst]|ll|[rv]e|LL|[RV]E))?%>*%[^_~] 245""",
        """match %[^_~]%<* knowledge (['’]([DSTdst]|ll|[rv]e|LL|[RV]E))?%>*%[^_~] 13""",
        """match %[^_~]%<* like (['’]([DSTdst]|ll|[rv]e|LL|[RV]E))?%>*%[^_~] 123""",
        """match %[^_~]%<* more (['’]([DSTdst]|ll|[rv]e|LL|[RV]E))?%>*%[^_~] 134""",
        """match %[^_~]%<* not (['’]([DSTdst]|ll|[rv]e|LL|[RV]E))?%>*%[^_~] 1345""",
        """match %[^_~]%<* people (['’]([DSTdst]|ll|[rv]e|LL|[RV]E))?%>*%[^_~] 1234""",
        """match %[^_~]%<* quite (['’]([DSTdst]|ll|[rv]e|LL|[RV]E))?%>*%[^_~] 12345""",
        """match %[^_~]%<* rather (['’]([DSTdst]|ll|[rv]e|LL|[RV]E))?%>*%[^_~] 1235""",
        """match %[^_~]%<* so (['’]([DSTdst]|ll|[rv]e|LL|[RV]E))?%>*%[^_~] 234""",
        """match %[^_~]%<* that (['’]([DSTdst]|ll|[rv]e|LL|[RV]E))?%>*%[^_~] 2345""",
        """match %[^_~]%<* us (['’]([DSTdst]|ll|[rv]e|LL|[RV]E))?%>*%[^_~] 136""",
        """match %[^_~]%<* very (['’]([DSTdst]|ll|[rv]e|LL|[RV]E))?%>*%[^_~] 1236""",
        """match %[^_~]%<* will (['’]([DSTdst]|ll|[rv]e|LL|[RV]E))?%>*%[^_~] 2456""",
        """match %[^_~]%<* you (['’]([DSTdst]|ll|[rv]e|LL|[RV]E))?%>*%[^_~] 13456""",
        "nofor word as 1356",
        "nofor word but 12",
        "nofor word can 14",
        "nofor word do 145",
        "nofor word every 15",
        "nofor word from 124",
        "nofor word go 1245",
        "nofor word have 125",
        "nofor word it 1346",
        "nofor word just 245",
        "nofor word knowledge 13",
        "nofor word like 123",
        "nofor word more 134",
        "nofor word not 1345",
        "nofor word people 1234",
        "nofor word quite 12345",
        "nofor word rather 1235",
        "nofor word so 234",
        "nofor word that 2345",
        "nofor word us 136",
        "nofor word very 1236",
        "nofor word will 2456",
        "nofor word you 13456",
        "nofor word but's 12-3-234",
        "nofor word but’s 12-3-234",
        "nofor word can's 14-3-234",
        "nofor word can’s 14-3-234",
        "nofor word can't 14-3-2345",
        "nofor word can’t 14-3-2345",
        "nofor word do's 145-3-234",
        "nofor word do’s 145-3-234",
        "nofor word go's 1245-3-234",
        "nofor word go’s 1245-3-234",
        "nofor word have's 125-3-234",
        "nofor word have’s 125-3-234",
        "nofor word it'd 1346-3-145",
        "nofor word it’d 1346-3-145",
        "nofor word it'll 1346-3-123-123",
        "nofor word it’ll 1346-3-123-123",
        "nofor word it's 1346-3-234",
        "nofor word it’s 1346-3-234",
        "nofor word knowledge's 13-3-234",
        "nofor word knowledge’s 13-3-234",
        "nofor word like's 123-3-234",
        "nofor word like’s 123-3-234",
        "nofor word more's 134-3-234",
        "nofor word more’s 134-3-234",
        "nofor word people's 1234-3-234",
        "nofor word people’s 1234-3-234",
        "nofor word so's 234-3-234",
        "nofor word so’s 234-3-234",
        "nofor word that'd 2345-3-145",
        "nofor word that’d 2345-3-145",
        "nofor word that'll 2345-3-123-123",
        "nofor word that’ll 2345-3-123-123",
        "nofor word that're 2345-3-1235-15",
        "nofor word that’re 2345-3-1235-15",
        "nofor word that's 2345-3-234",
        "nofor word that’s 2345-3-234",
        "nofor word that've 2345-3-1236-15",
        "nofor word that’ve 2345-3-1236-15",
        "nofor word will's 2456-3-234",
        "nofor word will’s 2456-3-234",
        "nofor word will've 2456-3-1236-15",
        "nofor word will’ve 2456-3-1236-15",
        "nofor word you'd 13456-3-145",
        "nofor word you’d 13456-3-145",
        "nofor word you'll 13456-3-123-123",
        "nofor word you’ll 13456-3-123-123",
        "nofor word you're 13456-3-1235-15",
        "nofor word you’re 13456-3-1235-15",
        "nofor word you's 13456-3-234",
        "nofor word you’s 13456-3-234",
        "nofor word you've 13456-3-1236-15",
        "nofor word you’ve 13456-3-1236-15",
        "contraction b",
        "contraction c",
        "contraction d",
        "contraction e",
        "contraction f",
        "contraction g",
        "contraction h",
        "contraction j",
        "contraction k",
        "contraction l",
        "contraction m",
        "contraction n",
        "contraction p",
        "contraction q",
        "contraction r",
        "contraction s",
        "contraction t",
        "contraction u",
        "contraction v",
        "contraction w",
        "contraction x",
        "contraction y",
        "contraction z",
        "contraction B",
        "contraction C",
        "contraction D",
        "contraction E",
        "contraction F",
        "contraction G",
        "contraction H",
        "contraction J",
        "contraction K",
        "contraction L",
        "contraction M",
        "contraction N",
        "contraction P",
        "contraction Q",
        "contraction R",
        "contraction S",
        "contraction T",
        "contraction U",
        "contraction V",
        "contraction W",
        "contraction X",
        "contraction Y",
        "contraction Z"
      )
    )

    //Strong contractions
    //and, for, of, the, with
    val Unit3 = Unit(
      "Unit 3: Strong contractions and, for, of, the, with", listOf(
        //and
        "always and 12346",
        //for
        "always for 123456",
        //of
        "always of 12356",
        "always ofor 135-123456", //in OFOR, FOR takes priority
        "match - aero [FWfw] 1-12456-135",
        "match - antero [FWfw] 1-1345-2345-12456-135",
        "match - auto [FWfw] =",
        "match - benzo [FWfw] 12-26-1356-135",
        "match - bio [FWfw] =",
        "match - chloro [FWfw] 16-123-135-1235-135",
        "match - deutero [FWfw] 145-15-136-2345-12456-135",
        "match - electro [FWfw] =",
        "match - fibro [FWfw] =",
        "match - fluoro [FWfw] =",
        "match - galvano [FWfw] =",
        "match - griseo [FWfw] =",
        "match - hetero [FWfw] 125-15-2345-12456-135",
        "match - homo [FWfw] =",
        "match - hydro [FWfw] =",
        "match - hypo [FWfw] =",
        "match - kilo [FWfw] =",
        "match - luteo [FWfw] =",
        "match - macro [FWfw] =",
        "match - micro [FWfw] =",
        "match - mono [FWfw] =",
        "match - myelo [FWfw] =",
        "match - myo [Ff] =",
        "match - nano [FWfw] = ",
        "match - nitro [FWfw] =",
        "match - octo [FWfw] =",
        "match - photo [FWfw] =",
        "match - pico [FWfw] =",
        "match - proto [FWfw] =",
        "match - pseudo [FWfw] =",
        "match - psycho [FWfw] 1234-234-13456-16-135",
        "match - retro [FWfw] =",
        "match - sulfo [FWfw] =",
        "match - sulpho [FWfw] =",
        "match - synchro [FWfw] 234-13456-1345-16-1235-135",
        "match - thermo [FWfw] 2346-1235-134-135",
        "match - thio [Ff][Uu][Rr] 1456-24-135",
        "match - ventro [FWfw] 1236-26-2345-1235-135",
        "sufword cofactor =",
        "sufword cofather 14-135-5-124",
        "sufword cofeatur 14-135-124-2-2345-136-1235",
        "sufword coferment 14-135-124-12456-56-2345",
        "sufword cofield =",
        "sufword cofight 14-135-124-24-126-2345",
        "sufword cofinal 14-135-124-35-1-123",
        "sufword cofinance 14-135-124-35-46-15",
        "sufword cofinancing 14-135-124-35-1-1345-14-346",
        "sufword cofound 14-135-124-46-145",
        "sufword cofunction 14-135-124-136-1345-14-56-1345",
        "sufword filofax 124-24-123-135-124-1-1346",
        "sufword insofar 35-234-135-124-345",
        "sufword portofino 1234-135-1235-2345-135-124-35-135",
        "sufword riboflavin 1235-24-12-135-124-123-1-1236-35",
        "sufword styrofoam 34-13456-1235-135-124-135-1-134",
        "sufword turbofan =",
        "sufword twofer 2345-2456-135-124-12456",
        "sufword twofold 2345-2456-135-124-135-123-145",
        //the
        "always the 2346",
        "match %a thead - 2345-125-2-145",
        "match %a thear [Tt] 2345-125-15-345",
        "match %a theim - =",
        "match - esthe [STst][EIei] 15-234-2346",
        "sufword calisthenic 14-1-123-24-234-2346-1345-24-14",
        "sufword demosthenes 145-15-134-135-234-2346-1345-15-234",
        "sufword eratosthenes 12456-1-2345-135-234-2346-1345-15-234",
        "sufword esther 15-234-2346-1235",
        "sufword hesther 125-15-234-2346-1235",
        "sufword motheaten 134-135-1456-2-2345-26",
        "sufword northeast 1345-135-1235-1456-2-34",
        "sufword northesk 1345-135-1235-1456-15-234-13",
        "sufword prostheses 1234-1235-135-234-2346-234-15-234",
        "sufword prosthesis 1234-1235-135-234-2346-234-24-234",
        "sufword prosthetic 1234-1235-135-234-2346-2345-24-14",
        "sufword southeast 234-1256-1456-2-34",
        "sufword southend 234-1256-1456-26-145",
        "sufword southesk 234-1256-1456-15-234-13",
        "sufword strathearn 34-1235-1-1456-15-345-1345",
        "sufword thence 1456-56-15",
        //with
        "always with 23456"
      )
    )

    //Shortform words and single-cell punctuation
    //ab, ac, af, ag, al, bl, ei, fr, ll
    val Unit5 = Unit(
      "Unit 5: Shortform words ab, ac, af,ag, al, bl, ei, fr, ll", listOf(
        """match %[_~^]%<* about ([Ss]|['’][Ss])?%>*%[_~^] 1-12""",
        """match %[_~^]%<* according ([Ss]|['’][Ss])?%>*%[_~^] 1-14""",
        """match %[_~^]%<*%a* after (%2%a*)?%>*%[_~^] 1-124""",
        """match %[_~^]%<* again ([Ss]|['’][Ss])?%>*%[_~^] 1-1245""",
        """match %[_~^]%<* also ([Ss]|['’][Ss])?%>*%[_~^] 1-123""",
        """match %[_~^]%<*%a* blind (%2%a*)?%>*%[_~^] 12-123""",
        """match %[_~^]%<* either ([Ss]|['’][Ss])?%>*%[_~^] 15-24""",
        """match %[_~^]%<*%a* friend (%2%a*)?%>*%[_~^] 124-1235""",
        """match %[_~^]%<* little (%2%a*)?([Ss]|['’][Ss])?%>*%[_~^] 123-123""",
        "contraction ab about",
        "contraction ac according",
        "contraction af after",
        "contraction ag again",
        "contraction al also",
        "contraction bl blind",
        "contraction ei either",
        "contraction fr friend",
        "contraction ll little",
        "nofor always , 56-2",
        "nofor always ; 56-23",
        "nofor always : 56-25",
        "nofor always . 56-256",
        "nofor always ! 56-235",
        "nofor always ? 56-236"
      )
    )

    //Strong groupsigns, wordsigns and shortform words
    //ch, sh, th, wh, ou, st
    val Unit6 = Unit(
      "Unit 6: Strong groupsigns, wordsigns, and shortform words ch, sh, th, wh, ou, st", listOf(
        //strong wordsigns
        """match %[^_~]%<* child (['’]([DSTdst]|ll|[rv]e|LL|[RV]E))?%>*%[^_~] 16""",
        """match %[^_~]%<* out (['’]([DSTdst]|ll|[rv]e|LL|[RV]E))?%>*%[^_~] 1256""",
        """match %[^_~]%<* shall (['’]([DSTdst]|ll|[rv]e|LL|[RV]E))?%>*%[^_~] 146""",
        """match %[^_~]%<* still (['’]([DSTdst]|ll|[rv]e|LL|[RV]E))?%>*%[^_~] 34""",
        """match %[^_~]%<* this (['’]([DSTdst]|ll|[rv]e|LL|[RV]E))?%>*%[^_~] 1456""",
        """match %[^_~]%<* which (['’]([DSTdst]|ll|[rv]e|LL|[RV]E))?%>*%[^_~] 156""",
        "nofor word child 16",
        "nofor word out 1256",
        "nofor word shall 146",
        "nofor word still 34",
        "nofor word this 1456",
        "nofor word which 156",
        "nofor word child's 16-3-234",
        "nofor word child’s 16-3-234",
        "nofor word out's 1256-3-234",
        "nofor word out’s 1256-3-234",
        "nofor word shall've 146-3-1236-15",
        "nofor word shall’ve 146-3-1236-15",
        "nofor word still's 34-3-234",
        "nofor word still’s 34-3-234",
        "nofor word this'd 1456-3-145",
        "nofor word this’d 1456-3-145",
        "nofor word this'll 1456-3-123-123",
        "nofor word this’ll 1456-3-123-123",
        "nofor word this's 1456-3-234",
        "nofor word this’s 1456-3-234",
        "nofor word which'd 156-3-145",
        "nofor word which’d 156-3-145",
        "nofor word which'll 156-3-123-123",
        "nofor word which’ll 156-3-123-123",
        "nofor word which're 156-3-1235-15",
        "nofor word which’re 156-3-1235-15",
        "nofor word which's 156-3-234",
        "nofor word which’s 156-3-234",
        "nofor word which've 156-3-1236-15",
        "nofor word which’ve 156-3-1236-15",
        //ch
        "always ch 16",
        """match (%[^_~]%<*) ch (['’]([DSTdst]|ll|[rv]e|LL|[RV]E))?(%>*%[^_~]) =""",
        "sufword publicheart 1234-136-12-123-24-14-125-15-345-2345",
        //sh
        "always sh 146",
        """match (%[^_~]%<*) sh (['’]([DSTdst]|ll|[rv]e|LL|[RV]E))?(%>*%[^_~]) =""",
        "match %a shead - 234-125-2-145",
        "match %a sheim - =",
        "match %a shole ([Ss]|(['’][Ss]))?%>*%[^_~] =",
        "match %a shood - =",
        "match %a shound - 234-125-46-145",
        "match %a shous [EIei] 234-125-1256-234",
        "sufword betshanger 12-15-2345-234-125-1-1345-1245-12456",
        "sufword bosham =",
        "sufword chisholm 16-24-234-125-135-123-134",
        "match - cross [Hh] = crosshair, crosshatch, etc",
        "sufword dachshund 145-1-16-234-125-136-1345-145",
        "sufword deshabille 145-15-234-125-1-12-24-123-123-15",
        "sufword frederikshavn 124-1235-1246-12456-24-13-234-125-1-1236-1345",
        "sufword gemshorn =",
        "sufword goshawk =",
        "sufword grasshopper 1245-1235-1-234-234-125-135-1234-1234-12456",
        "sufword grimsholm =",
        "sufword hartshorn 125-345-2345-234-125-135-1235-1345",
        "sufword keeshond =",
        "sufword malesherb 134-1-123-15-234-125-12456-12",
        "sufword mansholt =",
        "sufword mishandle 134-24-234-125-12346-123-15",
        "sufword mishandled 134-24-234-125-12346-123-1246",
        "sufword mishandling 134-24-234-125-12346-123-346",
        "sufword mishap 134-24-234-125-1-1234",
        "sufword mishear 134-24-234-125-15-345",
        "sufword mishit =",
        "sufword newshawk =",
        "sufword newshen 1345-15-2456-234-125-26",
        "sufword ramshorn =",
        "sufword rosmersholm 1235-135-234-134-12456-234-125-135-123-134",
        "sufword townshend 2345-246-1345-234-125-26-145",
        "match - transhum [Aa][Nn] =",
        "sufword undishearten 136-1345-145-24-234-125-15-345-2345-26",
        "sufword weisshorn =",
        "sufword wilhelmshaven 2456-24-123-125-15-123-134-234-125-1-1236-26",
        //th
        "always th 1456",
        """match (%[^_~]%<*) th (['’]([DSTdst]|ll|[rv]e|LL|[RV]E))?(%>*%[^_~]) =""",
        "match %a thand - 2345-125-12346",
        "match %a thill - =",
        "match %a thold - =",
        "match %a thoo [DKdk] =",
        "match %a thors [Ee] =",
        "match %a thound - 2345-125-46-145",
        "match %a thous [EIei] 2345-125-1256-234",
        "sufword bolthole =",
        "match - coat [Hh][Aa][Nn][Gg] =",
        "match - coat [Hh][Oo][Ll][Ee] =",
        "sufword crosthwait 14-1235-135-234-1456-2456-1-24-2345",
        "sufword esthwait 15-234-1456-2456-1-24-2345",
        "sufword flatholm =",
        "sufword goatherd 1245-135-1-2345-125-12456-145",
        "sufword gotthard 1245-135-2345-2345-125-345-145",
        "sufword knothole 13-1345-135-2345-125-135-123-15",
        "sufword lufthansa 123-136-124-2345-125-1-1345-234-1",
        "sufword nighthawk 1345-24-126-2345-125-1-2456-13",
        "sufword nuthatch 1345-136-2345-125-1-2345-16",
        "sufword porthole 1234-135-1235-2345-125-135-123-15",
        "sufword pothat =",
        "sufword potherb 1234-135-2345-125-12456-12",
        "match - pothol [Ee] =",
        "sufword pothunt =",
        "sufword rathole =",
        "sufword richthofen 1235-24-16-2345-125-12356-26",
        "sufword shorthorn 146-135-1235-2345-125-135-1235-1345",
        "match - sight [Hh][Oo][Ll][Ee] 234-24-126-2345",
        "match - vent [Hh][Oo][Ll][Ee] 1236-26-2345",
        "sufword warthog 2456-345-2345-125-135-1245",
        //wh
        "always wh 156",
        """match (%[^_~]%<*) wh (['’]([DSTdst]|ll|[rv]e|LL|[RV]E))?(%>*%[^_~]) =""",
        "match [AEae] whall - =",
        "match %a whead - 2456-125-2-145",
        "match [AEae] whol [Ee] = jawhole screwhole",
        "match %a whood - =",
        "match %a whors [Ee] =",
        "match %a whound - 2456-125-46-145",
        "match %a whous [EIei] 2456-125-1256-234",
        "sufword clawhammer 14-123-1-2456-125-1-134-134-12456",
        "sufword dewhurst 145-15-2456-125-136-1235-34",
        "sufword newham =",
        "sufword newhaven 1345-15-2456-125-1-1236-26",
        "sufword pewholder 1234-15-2456-125-135-123-145-12456",
        "match - rawhid [EIei] =",
        "sufword strawhat 34-1235-1-2456-125-1-2345",
        //ou
        "always ou 1256",
        """match (%[^_~]%<*) ou (['’]([DSTdst]|ll|[rv]e|LL|[RV]E))?(%>*%[^_~]) =""",
        """match  (%[^_~]%<*) proun [Ii] =""",   //prounion
        //st
        "always st 34",
        """match (%[^_~]%<*) st (['’]([DSTdst]|ll|[rv]e|LL|[RV]E))?(%>*%[^_~]) =""",
        "match %a stion - 234-56-1345",
        "match %a stown - 234-2345-246-1345",
        "sufword asthma 1-234-1456-134-1",
        "sufword bundestag 12-136-1345-145-15-234-2345-1-1245",
        "match - cross [Tt] = crosstie crosstrees",
        "sufword destouche 145-15-234-2345-1256-16-15",
        "sufword gastight 1245-1-234-2345-24-126-2345",
        "sufword gordonstoun 1245-135-1235-145-135-1345-234-2345-1256-1345",
        "sufword guesstimate 1245-136-15-234-234-2345-24-134-1-2345-15",
        "sufword guesstimated 1245-136-15-234-234-2345-24-134-1-2345-1246",
        "sufword guesstimating 1245-136-15-234-234-2345-24-134-1-2345-346",
        "sufword hephaestion 125-15-1234-125-1-15-34-24-135-1345",
        "sufword isthmi 24-234-1456-134-24",
        "sufword isthmus 24-234-1456-134-136-234",
        "sufword kreistag =",
        "sufword liebestod =",
        "sufword mistime 134-24-234-5-2345",
        "sufword painstaking 1234-1-35-234-2345-1-13-346",
        "sufword pastime 1234-1-234-5-2345",
        "sufword reichstag 1235-15-24-16-234-2345-1-1245",
        //shortform words
        """match %[_~^]%<* could ([Ss]|['’][Ss])?%>*%[_~^] 14-145""",
        "nofor word could  14-145",
        """match %[_~^]%<*%a* children (%2%a*)?([Ss]|['’][Ss])?%>*%[_~^] 16-1345""",
        """match %[_~^]%<* first (%2%a*)?([Ss]|['’][Ss])?%>*%[_~^] 124-34""",
        """match %[_~^]%<* good (%2%a*)?([Ss]|['’][Ss])?%>*%[_~^] 1245-145""",
        """match %[_~^]%<* him ([Ss]|['’][Ss])?%>*%[_~^] 125-134""",
        """match %[_~^]%<* its ([Ss]|['’][Ss])?%>*%[_~^] 1346-234""",
        """match %[_~^]%<* letter (%2%a*)?([Ss]|['’][Ss])?%>*%[_~^] 123-1235""",
        """match %[_~^]%<* much ([Ss]|['’][Ss])?%>*%[_~^] 134-16""",
        """match %[_~^]%<* must ([Ss]|['’][Ss])?%>*%[_~^] 134-34""",
        """match %[_~^]%<* paid ([Ss]|['’][Ss])?%>*%[_~^] 1234-145""",
        """match %[_~^]%<* quick (%2%a*)?([Ss]|['’][Ss])?%>*%[_~^] 12345-13   10.9.3""",
        """match %[_~^]%<* said ([Ss]|['’][Ss])?%>*%[_~^] 234-145""",
        """match %[_~^]%<* should ([Ss]|['’][Ss])?%>*%[_~^] 146-145""",
        """match %[_~^]%<* such ([Ss]|['’][Ss])?%>*%[_~^] 234-16""",
        """match %[_~^]%<* would ([Ss]|['’][Ss])?%>*%[_~^] 2456-145""",
        """match %[_~^]%<* your ([Ss]|['’][Ss])?%>*%[_~^] 13456-1235""",
        "contraction cd     could",
        "word chn =         children",
        """match %[_~^]%<*%a* chn (%2)|(%>*%[_~^]) =""",
        "word fst =         first",
        "contraction gd     good",
        "contraction hm     him",
        "contraction xs     its",
        "contraction lr     letter",
        "word mch =         much",
        "word mst =         must",
        "contraction pd     paid",
        "contraction qk     quick",
        "contraction sd     said",
        "word shd =         should",
        "word sch =         such",
        "contraction wd     would",
        "contraction yr     your"
      )
    )

    //Strong groupsigns and shortform words
    //ar, ed, er, gh, ow, ing
    val Unit7 = Unit(
      "Unit 7: Strong groupsigns and shortform words ar, ed, er, gh, ow, ing", listOf(
        //ar
        "always ar 345",
        "match (%[^_~]%<*) ar (['’]([DSTdst]|ll|[rv]e|LL|[RV]E))?(%>*%[^_~]) =",
        "sufword aright 1-5-1235",
        "sufword indiarubber 35-145-24-1-1235-136-23-12456",
        "sufword infrared 35-124-1235-1-1235-1246",
        //ed
        "always ed 1246",
        "match %a edale ([Ss]|(['’][Ss]))?%>*%[^_~] =",
        "match %a edown - 15-145-246-1345",
        "match - apple [Dd][Oo][Rr][Ee] =",
        "sufword basedow 12-1-234-15-145-246",
        "match - battle [Dd][Oo][Rr][Ee] =",
        "sufword cliveden 14-123-24-1236-15-145-26",
        "sufword daredevil 145-345-15-145-15-1236-24-123",
        "match - dumble [Dd][Oo][Rr][Ee] =",
        "sufword doubleday 145-1256-12-123-15-5-145",
        "sufword eyedrop =",
        "sufword firedrak =",
        "sufword firedrill =",
        "match - grave [Dd][Ii][Gg] =",
        "sufword gwynedd =",
        "sufword housedress 125-1256-234-15-145-1235-15-234-234",
        "sufword ingledew 35-1245-123-15-145-15-2456",
        "sufword kettledrum 13-15-2345-2345-123-15-145-1235-136-134",
        "sufword knuckleduster 13-1345-136-14-13-123-15-145-136-34-12456",
        "match - langue [Dd][Oo][Cc] =",
        "match - nose [Dd][IOio][Vv][EIei] =",
        "sufword piedish 1234-24-15-145-24-146",
        "sufword pinedrop 1234-35-15-145-1235-135-1234",
        "sufword priedieu =",
        "sufword rosedrop =",
        "sufword shoreditch 146-135-1235-15-145-24-2345-16",
        "sufword threedimension 1456-1235-15-15-145-24-134-26-46-1345",
        "sufword tonedeaf 2345-5-135-145-2-124",
        "sufword turtledove 2345-136-1235-2345-123-15-145-135-1236-15",
        "sufword tweedledee 2345-2456-15-1246-123-15-145-15-15",
        "sufword tweedledum 2345-2456-15-1246-123-15-145-136-134",
        "begword viced 1236-24-14-15-145",
        "always vinedress 1236-35-15-145-1235-15-234-234",
        //er
        "always er 12456",
        "sufword forerunner 123456-15-1235-136-1345-1345-12456",
        "sufword hedgerow 125-1246-1245-15-1235-246",
        "sufword homeroom 125-135-134-15-1235-135-135-134",
        "sufword horseradish 125-135-1235-234-15-1235-1-145-24-146",
        "sufword spareribs 234-1234-345-15-1235-24-12-234",
        "sufword stateroom 34-1-2345-15-1235-135-135-134",
        "sufword storeroom 34-135-1235-15-1235-135-135-134",
        "sufword viceregal 1236-24-14-15-1235-15-1245-1-123",
        "sufword viceroy 1236-24-14-15-1235-135-13456",
        "sufword castlereagh 14-1-34-123-15-1235-2-126",
        //gh
        "always gh 126",
        "match (%[^_~]%<*) gh ('([DSTdst]|ll|[rv]e|LL|[RV]E))?(%>*%[^_~]) =",
        "match %a ghead - 1245-125-2-145",
        "match %a gheap - 1245-125-2-1234",
        "match %a ghear [Tt] 1245-125-15-345",
        "match %a ghill - =",
        "match %a ghol [DETZdetz] =",
        "match %a ghorn - =",
        "match %a ghound - 1245-125-46-145",
        "match %a ghous [EIei] 1245-125-1256-234",
        "match %a ghur [Ss][Tt] =",
        "sufword cunnyngham 14-136-1345-1345-13456-1345-1245-125-1-134",
        "sufword froghop =",
        "sufword hwangho =",
        "sufword langhair =",
        "sufword shanghai 146-1-1345-1245-125-1-24",
        "sufword senghor 234-26-1245-125-135-1235",
        //ow
        "always ow 246",
        "always owork 135-5-2456", //in OWORK, the WORK sign takes  priority
        "sufword kilowatt 13-24-123-135-2456-1-2345-2345",
        "sufword locoweed 123-135-14-135-2456-15-1246",
        "sufword monowheel 134-135-1345-135-156-15-15-123",
        "sufword noway 1345-135-2456-1-13456",
        "sufword nowhere 1345-135-5-156",
        "sufword nowise 1345-135-2456-24-234-15",
        //ing
        "match !%[^_~] ing - 346",
        "#nofor endword ing'['’]s 346-3-234",
        "#nofor endword ingly 346-123-13456",
        "nofor midendword ing 346",
        "nofor always ing 35-1245",
        "sufword disingenuous 256-35-1245-26-136-1256-234",
        "sufword leningrad 123-26-35-1245-1235-1-145",  //This list is full of ghosts
        "sufword stalingrad 34-1-123-35-1245-1235-1-145",
        "sufword vainglorious 1236-1-35-1245-123-135-1235-24-1256-234",
        "sufword vainglory 1236-1-35-1245-123-135-1235-13456",
        //shortform words
        """match %[_~^]%<* above ([Ss]|['’][Ss])?%>*%[_~^] 1-12-1236""",
        """match %[_~^]%<* across ([Ss]|['’][Ss])?%>*%[_~^] 1-14-1235""",
        """match %[_~^]%<* afternoon ([Ss]|['’][Ss])?%>*%[_~^] 1-124-1345""",
        """match %[_~^]%<* afterward ([Ss]|['’][Ss])?%>*%[_~^] 1-124-2456""",
        """match %[_~^]%<* against ([Ss]|['’][Ss])?%>*%[_~^] 1-1245-34""",
        """match %[_~^]%<* almost ([Ss]|['’][Ss])?%>*%[_~^] 1-123-134""",
        """match %[_~^]%<* already ([Ss]|['’][Ss])?%>*%[_~^] 1-123-1235""",
        """match %[_~^]%<* although ([Ss]|['’][Ss])?%>*%[_~^] 1-123-1456""",
        """match %[_~^]%<* altogether ([Ss]|['’][Ss])?%>*%[_~^] 1-123-2345""",
        """match %[_~^]%<* always ([Ss]|['’][Ss])?%>*%[_~^] 1-123-2456""",
        """match %[_~^]%<*%a* braille %a*([Ss]|['’][Ss])?%>*%[_~^] 12-1235-123""",
        """match %[_~^]%<*%a* great %a*([Ss]|['’][Ss])?%>*%[_~^] 1245-1235-2345""",
        """match %[_~^]%<* immediate ([Ss]|['’][Ss])?%>*%[_~^] 24-134-134""",
        """match %[_~^]%<* necessary ([Ss]|['’][Ss])?%>*%[_~^] 1345-15-14""",
        """match %[_~^]%<* neither ([Ss]|['’][Ss])?%>*%[_~^] 1345-15-24""",
        """match %[_~^]%<* perhaps ([Ss]|['’][Ss])?%>*%[_~^] 1234-12456-125""",
        """match %[_~^]%<* together ([Ss]|['’][Ss])?%>*%[_~^] 2345-1245-1235""",
        "nofor word above  1-12-1236",
        "nofor word across  1-14-1235",
        "nofor word afternoon  1-124-1345",
        "nofor word afterward  1-124-2456",
        "nofor word against  1-1245-34",
        "nofor word almost  1-123-134",
        "nofor word already  1-123-1235",
        "nofor word although  1-123-1456",
        "nofor word altogether  1-123-2345",
        "nofor word always  1-123-2456",
        "nofor word braille  12-1235-123",
        "nofor word great  1245-1235-2345",
        "nofor word immediate  24-134-134",
        "nofor word necessary  1345-15-14",
        "nofor word neither  1345-15-24",
        "nofor word perhaps  1234-12456-125",
        "nofor word together  2345-1245-1235",
        "nofor word above's  1-12-1236-3-234",
        "nofor word across's  1-14-1235-3-234",
        "nofor word afternoon's  1-124-1345-3-234",
        "nofor word afterward's  1-124-2456-3-234",
        "nofor word against's  1-1245-34-3-234",
        "nofor word almost's  1-123-134-3-234",
        "nofor word already's  1-123-1235-3-234",
        "nofor word although's  1-123-1456-3-234",
        "nofor word altogether's  1-123-2345-3-234",
        "nofor word always's  1-123-2456-3-234",
        "nofor word braille's  12-1235-123-3-234",
        "nofor word great's  1245-1235-2345-3-234",
        "nofor word immediate's  24-134-134-3-234",
        "nofor word necessary's  1345-15-14-3-234",
        "nofor word neither's  1345-15-24-3-234",
        "nofor word perhaps's  1234-12456-125-3-234",
        "nofor word together's  2345-1245-1235-3-234",
        "contraction abv    above",
        "contraction acr    across",
        "contraction afn    afternoon",
        "contraction afw    afterward",
        "contraction agst     against",
        "contraction alm    almost",
        "contraction alr    already",
        "word alth =        although",
        "contraction alt    altogether",
        "contraction alw    always",
        "contraction brl    braille",
        "contraction grt    great",
        "contraction imm    immediate",
        "contraction nec    necessary",
        "contraction nei    neither",
        "word perh =        perhaps",
        "contraction tgr    together"
      )
    )

    //Dot 5 initial-letter contractions
    val Unit9 = Unit(
      "Unit 9: Dot 5 initial-letter contractions", listOf(
        //day
        "always day 5-145",
        "sufword dayan 145-1-13456-1-1345",
        "sufword whaddaya 156-1-145-145-1-13456-1",
        //ever
        "always ever 5-15",
        "always eever 15-15-1236-12456",
        "always iever 24-15-1236-12456",
        "match - antever [STst] 1-1345-2345-15-1236-12456",
        "sufword bellevernon 12-15-123-123-15-1236-12456-1345-135-1345", //old spelling of "Belle Vernon"
        "match - boulevers [EIei] 	12-1256-123-15-1236-12456-234",
        "match - deverb [Aa][LTlt] 145-15-1236-12456-12",
        "sufword echeveria 15-16-15-1236-12456-24-1",
        "sufword evernia 15-1236-12456-1345-24-1",
        "match %[^_~]%<* evers [EIei] 15-1236-12456-234",
        "always eversion 15-1236-12456-46-1345",
        "sufword evert 15-1236-12456-2345",
        "sufword everton 5-15-2345-135-1345",
        "always evertebra 15-1236-12456-2345-15-12-1235-1",
        "always evertib 15-1236-12456-2345-24-12",
        "sufword grevera 1245-1235-15-1236-12456-1",
        "sufword guenevere 1245-136-26-15-1236-12456-15", //variant spelling
        "sufword guinevere 1245-136-35-15-1236-12456-15",
        "sufword monteverdi 134-135-1345-2345-15-1236-12456-145-24",
        "word nevers 1345-15-1236-12456-234",  //place name",
        "sufword preverb 1234-1235-15-1236-12456-12",
        "sufword preverna 1234-1235-15-1236-12456-1345-1",
        "match - primever [IOio] 1234-1235-24-134-15-1236-12456",
        "sufword quinqueverb 12345-136-35-12345-136-15-1236-12456-12",
        "sufword semievergreen 234-15-134-24-5-15-1245-1235-15-26",
        "match %[^_~]%<* unevers [EIei] 136-1345-15-1236-12456-234",
        "sufword unevert 136-1345-15-1236-12456-2345",
        "sufword viceversa 1236-24-14-15-1236-12456-234-1", //normally two words
        "always reverb        1235-15-1236-12456-12",
        "match - reverd [Ii] 1235-15-1236-12456-145",
        "match - reverdur [Ee] 1235-15-1236-12456-145-136-1235",
        "always reversab 1235-15-1236-12456-234-1-12", // bad spelling but ...
        "always reversib 1235-15-1236-12456-234-24-12",
        "always reversif 1235-15-1236-12456-234-24-124",
        "match ([Nn][Oo][Nn])|([Uu][Nn]) reversal - 1235-15-1236-12456-234-1-123",
        "match ([Nn][Oo][Nn])|([Uu][Nn]) revers [Ee] 1235-15-1236-12456-234",
        "match ([Nn][Oo][Nn])|([Uu][Nn]) reversing - 1235-15-1236-12456-234-346",
        "match ([Nn][Oo][Nn])|([Uu][Nn]) revert - 1235-15-1236-12456-2345",
        "sufword prereversal 1234-1235-12456-15-1236-12456-234-1-123",
        "sufword prereverse 1234-1235-12456-15-1236-12456-234-15",
        "sufword prereversed 1234-1235-12456-15-1236-12456-234-1246",
        "sufword prereversing 1234-1235-12456-15-1236-12456-234-346",
        "match %[^_~]%<* revers [IOio](^|!%a) 1235-15-1236-12456-234",
        "match %[^_~]%<* rever [Ee] 1235-15-1236-12456",
        "match - reverif [IYiy] 1235-15-1236-12456-24-124",
        "sufword revering 1235-15-1236-12456-346",
        "sufword reversal 1235-15-1236-12456-234-1-123",
        "match %[^_~]%<* revers [Ee] 1235-15-1236-12456-234",
        "sufword reversing 1235-15-1236-12456-234-346",
        "sufword reversive 1235-15-1236-12456-234-24-1236-15",
        "sufword reverence 1235-5-15-56-15",
        "sufword reverencing 1235-5-15-26-14-346",
        "sufword reverend 1235-5-15-26-145",
        "sufword reverent 1235-5-15-26-2345",
        "sufword revertend 1235-5-15-2345-26-145",  //revertendi
        "sufword revert 1235-15-1236-12456-2345",
        "sufword unrevered 136-1345-1235-15-1236-12456-1246",
        "match - persevera [Tt][EIei] 1234-12456-234-5-15-1",
        "match - persever [AEIaei]       1234-12456-234-15-1236-12456",
        "match - sever [Ee](^|![Dd]) 234-15-1236-12456",
        "sufword severish 234-15-1236-12456-24-146",
        "match - sever [Ii][Tt][IYiy] 234-15-1236-12456",
        "sufword severus 234-15-1236-12456-136-234",
        "always severed  234-5-15-1246",
        //father
        "always father 5-124",
        //here
        "always here 5-125",
        "always hered 125-12456-1246", // preference to single cell signs
        "match - here [Ee][Nn] 125-12456-15",
        "always herence 125-12456-56-15",
        "always herencies 125-12456-26-14-24-15-234",
        "always herency 125-12456-26-14-13456",
        "always herend 125-12456-26-145",
        "always herent 125-12456-26-2345",
        "always herer 125-12456-12456",
        "match - heresc [Ee][Nn][CTct] 125-12456-15-234-14",
        "match - here [Ss][Ee][Ss] 125-12456-15",
        "match - here [Ss][IiYy] 125-12456-15",
        "match - here [Tt][Ii][Cc] 125-12456-15",
        "sufword heredofamil 125-12456-1246-135-124-1-134-24-123",
        "sufword hereford 125-12456-15-123456-145",
        "sufword hereld 125-12456-15-123-145",
        "sufword herenach 125-12456-26-1-16",
        "match - hereto [CGcg][AHah] 125-12456-15-2345-135",
        "match - heretri [CXcx] 125-12456-15-2345-1235-24",
        "sufword hereward 125-12456-15-2456-345-145",
        "sufword herez 125-12456-15-1356",
        "match - phereclu [Ss] 1234-125-12456-15-14-123-136",
        "match - pherecra [Tt][EIei] 1234-125-12456-15-14-1235-1",
        "match - pheremi [Aa] 1234-125-12456-15-134-24",
        "word pheres 1234-125-12456-15-234",
        "match - phere [Ss][Ss] 1234-125-12456-15",
        //know
        "always know 5-13",
        "sufword lucknow 123-136-14-13-1345-246",
        //lord
        "always lord 5-123",
        "sufword bachelordom 12-1-16-15-123-135-1235-145-135-134",
        "sufword chlordan 16-123-135-1235-145-1-1345",
        "sufword chlordiazep 16-123-135-1235-145-24-1-1356-15-1234",
        "sufword tailordom =",
        //mother
        "always mother 5-134",
        "match %a motherap [EIYeiy] 134-135-2346-1235-1-1234",
        "match %a mothere ^|!%a 134-135-2346-1235-15",
        "match %a motherium - 134-135-2346-1235-24-136-134",
        "match %a motherm - 134-135-2346-1235-134",
        //name
        "always name 5-1345",
        "always nament 1345-1-56-2345", //in nament, MENT has priority
        "match - ename ([DSds]|(['’][Ss]))?%>*%[^_~] 15-5-1345", // filename tradename
        "endword namese =",
        "endword namesian =",
        "match - name [Ee] =",
        "match - name [Tt][Ee][Rr] 1345-1-134-15",
        "match - name [Tt][Rr][AEIOUYaeiouy] 1345-1-134-15",
        "sufword anamelech 1-1345-1-134-15-123-15-16",
        "sufword anamelek =",
        "match - anamesit [AEIOUaeiou] =",
        "sufword anametadrom =",
        "match - cinnam [Ee]%a 14-35-1345-1-134",
        "sufword coname 14-135-5-1345",
        "match - coronam [Ee][Nn] =",
        "match ^|!%a nonam [Ee]%a 1345-135-1345-1-134", // nonamenable nonamendable
        "match ^|!%a unam [Ee]%a 136-1345-1-134", // unameliorated unamendable unamerce
        //one
        "always one 5-135",
        "match %a onea ^|!%a =",
        "match %a onea [ELNSelns](^|!%a) 135-1345-2",
        "match %a onea [DTdt][AEIOUaeiou] 135-1345-2",
        "match - onec [KTkt] =",
        "match - onecro [STst][EIei] =",
        "match %a oned - 135-1345-1246",
        "match %a one [Ee] 135-1345-15",
        "match - onega ^|!%a =",
        "match - onega [LNTlnt] =",
        "match %a onei ^|!%a =",
        "match %a one [Ii][Ss][MTmt] =",
        "match %a one [Ii][Tt][IYiy] =",
        "match %a onel [AIOUaiou]?[Ss]?(^|!%a) =",
        "match %a onell ^|!%a =",
        "match - onell [AEIOUYaeiouy] 135-1345-15-123-123",
        "match %a onema [ESes]?(^|!%a) =",
        "match %a onemal ^|!%a =",
        "match %a onemat [AIOUaioU] =",
        "match %a oneme [Ss]?(^|!%a) =",
        "match %a onemer [Tt][EIei] 135-1345-15-134-12456",
        "match %a onemi [ACac] =",
        "match %a onen [Ss]?(^|!%a) 135-1345-26",
        "match %a onence - 135-1345-56-15",
        "match %a onen [CDTcdt] 135-1345-26",
        "match %a onene [Ss]?(^|!%a) 135-1345-26-15",
        "match %a one [Oo] =",
        "match %a oneph - 135-1345-15-1234-125",
        "match %a oner - 135-1345-12456",
        "match %a onese - 135-1345-15-234-15",
        "match %a onesia - 135-1345-15-234-24-1",
        "match %a onesis ^|!%a =",
        "match %a onesqu [Ee] =",
        "match %a oness - 135-56-234",
        "match %a onest - 135-1345-15-34",
        "match %a onet ^|!%a =",
        "match %a oneta ^|!%a =",
        "match %a oneti [ACSZacsz] =",
        "match %a onet [STZstz] =",
        "match %a oneu [MRSTmrst] 135-1345-15-136",
        "match %a one [FVXZfvxz][Ss]?(^|!%a) =",
        "match %a onex [Ii] =",
        "match - oon [Ee] =",
        "sufword abalone 1-12-1-123-135-1345-15",
        "sufword alcyone 1-123-14-13456-135-1345-15",
        "sufword anemone 1-1345-15-134-135-1345-15",
        "sufword antigone 1-1345-2345-24-1245-135-1345-15",
        "sufword antonescu =",
        "sufword argemone 345-1245-15-134-135-1345-15",
        "sufword baronet 12-345-135-1345-15-2345",
        "sufword bayonet 12-1-13456-135-1345-15-2345",
        "sufword bonedog 12-5-135-145-135-1245",
        "sufword bonedry 12-5-135-145-1235-13456",
        "sufword bonesteel 12-5-135-34-15-15-123",
        "sufword canzone =",
        "sufword cassone =",
        "sufword castiglione 14-1-34-24-1245-123-24-135-1345-15",
        "sufword chitarrone 16-24-2345-345-1235-135-1345-15",
        "sufword cicerone 14-24-14-12456-135-1345-15",
        "sufword cleone =",
        "sufword clione =",
        "sufword colonel 14-135-123-135-1345-15-123",
        "sufword comedones 14-135-134-1246-135-1345-15-234",
        "sufword coneigh 14-135-1345-15-24-126", //-bor/bour",
        "sufword conversazione 25-1236-12456-234-1-1356-24-135-1345-15",
        "always coronet =",
        "sufword daimon =", // plural is -es pron. -eez",
        "sufword deone =",
        "sufword dione =",
        "sufword doblon =", // plural is -es pron. -eez",
        "sufword donelson =",
        "match - donev [AEae][Nn] =",
        "word epulones =",
        "word erigone 12456-24-1245-135-1345-15",
        "word falcones =",
        "word gaberones 1245-1-12-12456-135-1345-15-234",
        "sufword gaborone =",
        "word gekkones =",
        "sufword giorgione 1245-24-135-1235-1245-24-135-1345-15",
        "sufword halcyone =",
        "sufword hermione 125-12456-134-24-135-1345-15",
        "sufword honegger 125-135-1345-15-2356-12456",
        "always honest 125-5-135-34",
        "sufword ionesco 24-135-1345-15-234-14-135",
        "sufword jasione =",
        "sufword joneses 245-5-135-234-15-234",
        "sufword jonesian 245-5-135-234-24-1-1345",
        "sufword jonestown 245-5-135-234-2345-246-1345",
        "match ^|!%a kanon [Ee] =",
        "sufword krone 13-1235-135-1345-15",
        "sufword kronen 13-1235-135-1345-26",
        "sufword kroner 13-1235-135-1345-12456",
        "sufword laestrygones 123-1-15-34-1235-13456-1245-135-1345-15-234",
        "sufword lazzarone 123-1-1356-1356-345-135-1345-15",
        "sufword lugones =",
        "sufword madrone =",
        "sufword mantellone =",
        "sufword mbabone =",
        "sufword merioneth 134-12456-24-135-1345-15-1456",
        "sufword minestrone 134-35-15-34-1235-135-1345-15",
        "sufword moliones =",
        "match - moneci [AOao] =",
        "sufword monegasqu =",
        "sufword monembry =",
        "sufword monepi =",
        "sufword monet 134-135-1345-15-2345",
        "word moneth 134-135-1345-15-1456",
        "match - monetari [LSls] 134-5-135-2345-345-24", // -ily -ism -ist",
        "always monetary 134-5-135-2345-345-13456",
        "match - moneti [SZsz][AEIaei] 134-5-135-2345-24", // monetization",
        "sufword montefiascone =",
        "sufword morone =",
        "sufword myrmidones =",
        "word none 1345-5-135",
        "word nones 1345-5-135-234",
        "#word nonesuch", // handled under shortforms app. 1",
        "sufword nonesuches 1345-5-135-234-136-16-15-234",
        "sufword nonetheless 1345-5-135-2346-46-234",
        "match %[^_~]%<* non [Ee]%a 1345-135-1345",
        "sufword oenone 135-26-135-1345-15",
        "sufword oneal 135-1345-2-123",
        "sufword oneco =",
        "match ^|!%a oneg [AEIOUaeiou] = Onega Onegin Onegite Onego",
        "sufword oneida 135-1345-15-24-145-1",
        "sufword oneil =",
        "match ^|!%a oneir [IOio] =",
        "sufword onekam =",
        "sufword oneont =",
        "match ^|!%a oner [AEIOUYaeiouy] 135-1345-12456",
        "sufword onesimus =",
        "sufword onesiphorus =",
        "sufword opilione =",
        "sufword padrone =",
        "sufword panettone =",
        "sufword papiliones =",
        "word pensione 1234-26-234-24-135-1345-15",
        "word pensiones 1234-26-234-24-135-1345-15-234",
        "word peones =",
        "sufword persephone 1234-12456-234-15-1234-125-135-1345-15",
        "match - phones [Tt][Hh][Ee][Mm] =",
        "sufword pronegotia = pronegotiation",
        "sufword sawboneses 234-1-2456-12-5-135-234-15-234",
        "sufword schiavone 234-16-24-1-1236-135-1345-15",
        "word scorpiones =",
        "match ^|!%a shoshon [EIei] 146-135-146-135-1345",
        "sufword sirione =",
        "sufword soffione 234-12356-124-24-135-1345-15",
        "sufword spumone 234-1234-136-134-135-1345-15",
        "match - stonegat [Ee] 34-5-135-1245-1-2345",
        "sufword stonestreet 34-5-135-34-1235-15-15-2345",
        "word struthiones 34-1235-136-1456-24-135-1345-15-234",
        "word sturiones 34-136-1235-24-135-1345-15-234",
        "word suiones =",
        "match - sulfon [Ee][Tt][Hh][AEIOUYaeiouy] =",
        "match - sulphon [Ee][Tt][Hh][AEIOUYaeiouy] =",
        "word sycones =",
        "sufword tarsonemid 2345-345-234-135-1345-15-134-24-145",
        "sufword tonelada =",
        "sufword torrone =",
        "sufword zabaglione =",
        "match - zonesthe [STst] 1356-135-1345-15-234-2346",
        //part
        "always part 5-1234",
        "sufword parthenogenesis 1234-345-2346-1345-135-1245-26-15-234-24-234",
        "sufword parthenon 1234-345-2346-1345-135-1345",
        "sufword parthia 1234-345-1456-24-1",
        //question
        "always question 5-12345",
        //right
        "always right 5-1235",
        //some
        "always some 5-234",
        "match - somer [Ii][Cc] 234-135-134-12456",
        "match - somer [Ii][Ss][MTmt] 234-135-134-12456",
        "match - somer [Oo][Uu][Ss] 234-135-134-12456",
        "match - some [Tt][Ee][Rr] 234-135-134-15",
        "match - some [Tt][Rr][AaEeIiOoUuYy] 234-135-134-15",
        "always somever 234-135-134-5-15",
        "sufword besomer 23-234-135-134-12456",
        "sufword blossomed 12-123-135-234-234-135-134-1246",
        "always isomer 24-234-135-134-12456",
        "sufword ransomed 1235-1-1345-234-135-134-1246",
        "sufword somersault 234-135-134-12456-234-1-136-123-2345",
        "sufword somerset 234-135-134-12456-234-15-2345",
        "sufword unbosomed 136-1345-12-135-234-135-134-1246",
        //time
        "always time 5-2345",
        "always timent 2345-24-56-2345", //in timent, MENT has priority",
        "sufword altimeter 1-123-2345-24-134-15-2345-12456",
        "sufword centime 14-26-2345-24-134-15",
        "sufword mortimer 134-135-1235-2345-24-134-12456",
        "sufword multimedia 134-136-123-2345-24-134-1246-24-1",
        //under
        "always under 5-136",
        //work
        "always work 5-2456",
        //young
        "always young 5-13456",
        //there
        """match ^|!%a therea [BFGbfg]([Ss]|['’][Ss])?%>*%[_~^] 2346-1235-2""", //  not thereabout, -after etc",
        "match ^|!%a there [Mm] 2346-1235-15 theremin",
        "match ^|!%a there [Ss][AEIOSUYaeiosuy] 2346-1235-15", //  Theresa, Therese etc",
        "match ^|!%a therevi [Dd] 2346-1235-15-1236-24", //  Therevidae",
        "match ^|!%a there [Zz][Ii][Nn] 2346-1235-15", //   Therezina etc",
        "match ^|!%a there - 5-2346", //    a little more general than sufword",
        "nofor always there 5-2346",
        "always character 5-16", //character
        "always through 5-1456", //through
        "always where 5-156", //where
        "sufword where'er 156-12456-15-3-12456",
        "sufword where’er 156-12456-15-3-12456",
        "sufword whereupon 5-156-45-136",
        "sufword wherever 156-12456-5-15",
        "always ought 5-1256", //ought
        "match %a ought [Aa][Ii][Ll] 1256-126-2345", // ploughtail",
      )
    )

    //Two-cell punctuation and shortform words
    //Are the various symbols translated correctly by default? No sign of them in the grade 2 table.
    val Unit11 = Unit(
      "Unit 11: Two-cell punctuation and shortform words", listOf(
        """match %[_~^]%<* herself ([Ss]|['’][Ss])?%>*%[_~^] 125-12456-124""",
        """match %[_~^]%<* himself ([Ss]|['’][Ss])?%>*%[_~^] 125-134-124""",
        """match %[_~^]%<* itself ([Ss]|['’][Ss])?%>*%[_~^] 1346-124""",
        """match %[_~^]%<* myself ([Ss]|['’][Ss])?%>*%[_~^] 134-13456-124""",
        """match %[_~^]%<* oneself ([Ss]|['’][Ss])?%>*%[_~^] 5-135-124""",
        """match %[_~^]%<* ourselves ([Ss]|['’][Ss])?%>*%[_~^] 1256-1235-1236-234""",
        """match %[_~^]%<* themselves ([Ss]|['’][Ss])?%>*%[_~^] 2346-134-1236-234""",
        """match %[_~^]%<* thyself ([Ss]|['’][Ss])?%>*%[_~^] 1456-13456-124""",
        """match %[_~^]%<* yourself ([Ss]|['’][Ss])?%>*%[_~^] 13456-1235-124""",
        """match %[_~^]%<* yourselves ([Ss]|['’][Ss])?%>*%[_~^] 13456-1235-1236-234""",
        "nofor word herself  125-12456-124",
        "nofor word himself  125-134-124",
        "nofor word itself  1346-124",
        "nofor word myself  134-13456-124",
        "nofor word oneself  5-135-124",
        "nofor word ourselves  1256-1235-1236-234",
        "nofor word themselves  2346-134-1236-234",
        "nofor word thyself  1456-13456-124",
        "nofor word yourself  13456-1235-124",
        "nofor word yourselves  13456-1235-1236-234",
        "nofor word herselfs  125-12456-124-234",
        "nofor word himselfs  125-134-124-234",
        "nofor word itselfs  1346-124-234",
        "nofor word myselfs  134-13456-124-234",
        "nofor word oneselfs  5-135-124-234",
        "nofor word ourselvess  1256-1235-1236-234-234", //English is weird...
        "nofor word themselvess  2346-134-1236-234-234",
        "nofor word thyselfs  1456-13456-124-234",
        "nofor word yourselfs  13456-1235-124-234",
        "nofor word yourselvess  13456-1235-1236-234-234",
        "nofor word herself's  125-12456-124-3-234",
        "nofor word himself's  125-134-124-3-234",
        "nofor word itself's  1346-124-3-234",
        "nofor word myself's  134-13456-124-3-234",
        "nofor word oneself's  5-135-124-3-234",
        "nofor word ourselves's  1256-1235-1236-234-3-234",
        "nofor word themselves's  2346-134-1236-234-3-234",
        "nofor word thyself's  1456-13456-124-3-234",
        "nofor word yourself's  13456-1235-124-3-234",
        "nofor word yourselves's  13456-1235-1236-234-3-234",
        "word herf =        herself",
        "contraction hmf    himself",
        "contraction xf     itself",
        "contraction myf    myself",
        "word onef =        oneself",
        "word ourvs =       ourselves",
        "word themvs =      themselves",
        "word thyf =        thyself",
        "contraction yrf    yourself",
        "contraction yrvs   yourselves",
      )
    )

    //Initial letter contractions for dots 4-5 and 4-5-6
    val Unit12 = Unit(
      "Unit 12: Initial letter contractions for dots 4-5, 4-5-6", listOf(
        //upon
        "always upon 45-136",
        "sufword dupont 145-136-1234-135-1345-2345",
        //word
        "always word 45-2456",
        //these
        "always these 45-2346",
        "sufword antitheses 1-1345-2345-24-2346-234-15-234",
        "sufword hypotheses 125-13456-1234-135-2346-234-15-234",
        "sufword parentheses 1234-345-26-2346-234-15-234",
        "sufword syntheses 234-13456-1345-2346-234-15-234",
        "sufword theses 2346-234-15-234",
        "sufword theseus 2346-234-15-136-234",
        //those
        "nofor always those 45-1456",
        "match ^|!%a those ^|!%a 45-1456",  //In practice, only the word "those" uses the sign
        //whose
        "always whose 45-156",
        //cannot
        "always cannot 456-14",
        //had
        "always had 456-125",
        "always phad 1234-125-1-145",
        //"//#TODO:  check word jehad =",
        //"//#TODO:  check word jihad =",
        "sufword hades 125-1-145-15-234",
        "sufword hadrian 125-1-145-1235-24-1-1345",
        "sufword menhaden 134-26-125-1-145-26",
        //many
        "always many 456-134",
        //spirit
        "always spirit 456-234",
        //their
        "always their 456-2346",
        //world
        "always world 456-2456",
        """match %[_~^]%<* afterworld ([Ss]|['’][Ss])?%>*%[_~^] 1-124-456-2456""",
        "nofor word afterworld  1-124-456-2456",
        "nofor word afterworlds  1-124-456-2456-234",
        "nofor word afterworld's  1-124-456-2456-3-234"
      )
    )

    //Lower wordsigns
    //his, was, were, be, in, enough
    val Unit14 = Unit(
      "Unit 14: Lower Wordsigns his, was, were, be, in, enough", listOf(
        //enough
        "word enough's 26-3-234",
        "word enough’s 26-3-234",
        """match %[^_~]([\\([{]*|[\\([{]+%<*) enough (%>*[\\)\\]}]+|[\\)\\]}]*)%[^_~] 26""",
        "nofor lowword enough 26",
        "always enough 26-1256-126",
        //his
        """match %[^_]|%[^_~]%<*[([{] his %[^_]|[)}\\]]%>*%[^_~] 236""",
        "nofor lowword his 236",
        //was
        """match %[^_]|%[^_~]%<*[([{] was %[^_]|[)}\\]]%>*%[^_~] 356""",
        "nofor lowword was 356",
        //were
        """match %[^_]|%[^_~]%<*[([{] were %[^_]|[)}\\]]%>*%[^_~] 2356""",
        "nofor lowword were 2356",
        //in
        """match %[^_]!%[_1]* in !%[_1]*%[^_] 35""",
        "nofor always in 35",
        //be
        """match %[^_]|%[^_~]%<*[([{] be %[^_]|[)}\\]]%>*%[^_~] 23""",
        //shortform words
        """match %[_~^]%<* because ([Ss]|['’][Ss])?%>*%[_~^] 23-14""",
        """match %[_~^]%<* before ([Ss]|['’][Ss])?%>*%[_~^] 23-124""",
        """match %[_~^]%<* behind ([Ss]|['’][Ss])?%>*%[_~^] 23-125""",
        """match %[_~^]%<* below ([Ss]|['’][Ss])?%>*%[_~^] 23-123""",
        """match %[_~^]%<* beneath ([Ss]|['’][Ss])?%>*%[_~^] 23-1345""",
        """match %[_~^]%<* beside ([Ss]|['’][Ss])?%>*%[_~^] 23-234""",
        """match %[_~^]%<* between ([Ss]|['’][Ss])?%>*%[_~^] 23-2345""",
        """match %[_~^]%<* beyond ([Ss]|['’][Ss])?%>*%[_~^] 23-13456""",
        """match %[_~^]%<* today ([Ss]|['’][Ss])?%>*%[_~^] 2345-145""",
        """match %[_~^]%<* tomorrow ([Ss]|['’][Ss])?%>*%[_~^] 2345-134""",
        """match %[_~^]%<* tonight ([Ss]|['’][Ss])?%>*%[_~^] 2345-1345""",
        "nofor word because  23-14",
        "nofor word before  23-124",
        "nofor word behind  23-125",
        "nofor word below  23-123",
        "nofor word beneath  23-1345",
        "nofor word beside  23-234",
        "nofor word between  23-2345",
        "nofor word beyond  23-13456",
        "nofor word today  2345-145",
        "nofor word tomorrow  2345-134",
        "nofor word tonight  2345-1345",
        "nofor word becauses  23-14-234",
        "nofor word befores  23-124-234",
        "nofor word behinds  23-125-234",
        "nofor word belows  23-123-234",
        "nofor word beneaths  23-1345-234",
        "nofor word besides  23-234-234",
        "nofor word betweens  23-2345-234",
        "nofor word beyonds  23-13456-234",
        "nofor word todays  2345-145-234",
        "nofor word tomorrows  2345-134-234",
        "nofor word tonights  2345-1345-234",
        "nofor word because's  23-14-3-234",
        "nofor word before's  23-124-3-234",
        "nofor word behind's  23-125-3-234",
        "nofor word below's  23-123-3-234",
        "nofor word beneath's  23-1345-3-234",
        "nofor word beside's  23-234-3-234",
        "nofor word between's  23-2345-3-234",
        "nofor word beyond's  23-13456-3-234",
        "nofor word today's  2345-145-3-234",
        "nofor word tomorrow's  2345-134-3-234",
        "nofor word tonight's  2345-1345-3-234",
        "word bec =         because",
        "word bef =         before",
        "word beh =         behind",
        "word bel =         below",
        "word ben 12-26     beneath",
        "word bes =         beside",
        "word bet =         between",
        "word bey =         beyond",
        "contraction td     today",
        "contraction tm     tomorrow",
        "contraction tn     tonight"
      )
    )

    //Lower groupsigns (beginning, middle, end)
    //be, con, dis, ea, bb, cc, ff, gg, in, en
    val Unit15 = Unit(
      "Unit 15: Lower Groupsigns be, con, dis, ea, bb, cc, ff, gg, in, en", listOf(
        //in
        "match !%[_1]%1* in - 35",
        "match - in %1*!%[_1] 35",
        "midendword iness 24-56-234",
        "sufword multinational 134-136-123-2345-35-1-56-1345-1-123",
        //en
        "match %[^_~]%<* en %>*%[_~^] =",   //must be first",
        "match !%[_1]%1* en - 26",
        "match - en %1*!%[_1] 26",
        "nofor always en 26",
        "midendword eness 15-56-234 closeness",
        "sufword bluenose 12-123-136-15-1345-135-234-15",
        "sufword bottleneck 12-135-2345-2345-123-15-1345-15-14-13",
        "sufword forenoon 123456-15-1345-135-135-1345",
        "sufword toenail 2345-135-15-1345-1-24-123",
        "sufword turtleneck 2345-136-1235-2345-123-15-1345-15-14-13",
        //be
        "empmatchafter match %[^_~]%<* be [Aa][Pp][Rr][Oo][Nn] 23",
        "word beata 23-1-2345-1",
        "word beatae 23-1-2345-1-15",
        "word beati 23-1-2345-24",
        "empmatchafter match %[^_~]%<* be [Aa][Tt][Ii]![Nn] 23",               //beati*",
        "empmatchafter match %[^_~]%<* be [Aa][Tt][Rr] 23",                    //bea*",
        "word beatus 23-1-2345-136-234",
        "word beche 12-15-16-15",
        "word beches 12-15-16-15-234",
        "empmatchafter match %[^_~]%<* bech [DTdt] 12-15-16",
        "empmatchafter match %[^_~]%<* beclome [Tt][Hh] =",    //beclomethasone",
        "empmatchafter match %[^_~]%<* beconas [AEIOUYaeiouy] =",
        "empmatchafter match %[^_~]%<* be [Cc]![CKQTckqt] 23",                   //bec*",
        "word bede 12-1246-15",
        "word beden 12-1246-26",
        "word bedes 12-1246-15-234",
        "empmatchafter match %[^_~]%<* be [Dd][AIOUaiou] 23",                        //bed*",
        "empmatchafter match %[^_~]%<* bede [Gg]([Uu]?)[Aa][Rr] 12-1246-15",
        "empmatchafter match %[^_~]%<* bede [Hh][Oo][Uu][Ss] 12-1246-15",
        "empmatchafter match %[^_~]%<* bede ([Ss]?)(([Ww][Oo])?)[Mm]([Aa]|[Ee])[Nn] 12-1246-15",
        "empmatchafter match %[^_~]%<* be [Dd][Ee] 23",            //bede*",
        "empmatchafter match %[^_~]%<* bediver [Ee] 12-1246-24-1236-12456",
        "empmatchafter match %[^_~]%<* bedou [Ii][Nn] 12-1246-1256",
        "empmatchafter match %[^_~]%<* bed ([Ee]?)[Rr][AEae]([Ii]?)[Ll] 12-1246",
        "empmatchafter match %[^_~]%<* be [Dd][Rr][Aa] 23",                    //bedr*",
        "empmatchafter match %[^_~]%<* be [Dd][Rr][Ee][Nn][Cc][Hh] 23",
        "empmatchafter match %[^_~]%<* be [Dd][Rr][Ee][Ss][Ss] 23",
        "empmatchafter match %[^_~]%<* bed [Rr][Ii][Dd] 12-1246",
        "empmatchafter match %[^_~]%<* be [Dd][Rr][Ii] 23",
        "empmatchafter match %[^_~]%<* be [Dd][Rr][Oo][Pp] 23",
        "empmatchafter match %[^_~]%<* be [Dd][Rr][Oo][Ww] 23",
        "empmatchafter match %[^_~]%<* be [Dd][Rr][Uu] 23",
        "empmatchafter match %[^_~]%<* bedu [Ii][Nn] 12-1246-136",
        "empmatchafter match %[^_~]%<* be [Dd][Ww][Aa][Rr][Ff] 23",
        "empmatchafter match %[^_~]%<* be [Dd][Ww][Ee][Ll][LTlt] 23",
        "empmatchafter match %[^_~]%<* be [Ee][Ll][Zz] 23",                    //bee*",
        "sufword beghard 12-15-1245-125-345-145",  //H is sometimes aspirate",
        "match %[^_~]%<* begler [Bb][Ee][GYgy] 12-15-1245-123-12456",
        "empmatchafter match %[^_~]%<* be [Gg]![BDFGMPQSTVbdfgmpqstv] 23",                     //beg*",
        "empmatchafter match %[^_~]%<* beh [BCDFGHJKLMNPQRSTVWXZbcdfghjklmnpqrstvwxz] =",
        "empmatchafter match %[^_~]%<* bein ['’] 23-24-1345",
        "word bein 12-15-35",
        "word beins 12-15-35-234",
        "empmatchafter match %[^_~]%<* be [Ii][Nn] 23",                        //bei*",
        "sufword bekesy =",
        "empmatchafter match %[^_~]%<* bek [HKRThkrt][AIai] =",
        "sufword belafon =",      //-te", //RIP Harry Belafonte
        "sufword belamour 12-15-123-1-134-1256-1235",
        "empmatchafter match %[^_~]%<* belemn ([AEIOUYaeiouy]*)[DTdt] =",      //e.g. -nid, -nite, -noid",
        "empmatchafter match %[^_~]%<* belom [Aa][Nn][Cc] =",
        "empmatchafter match %[^_~]%<* belomy [Ss] =",
        "empmatchafter match %[^_~]%<* belone ([Ss]|['’][Ss])?%>*%[_~^] =",
        "empmatchafter match %[^_~]%<* belon [EOeo][Pp][Hh][Oo] =",
        "empmatchafter match %[^_~]%<* belon ([AEIOUYaeiouy]*)[DTdt] =",      //e.g. -nid, -nite, -noid",
        "empmatchafter match %[^_~]%<* be [Ll][AEIOUWYaeiouwy] 23",            //bel*",
        "sufword benadryl 12-26-1-145-1235-13456-123",
        "word benammi 12-26-1-134-134-24",    // Normally written hyphenated",
        "word benefic 23-1345-15-124-24-14", //  Different from below",
        "empmatchafter match %[^_~]%<* be [Nn][Ee][Ff][Ii][Cc][Ee][Nn] 23",    //beneficen*",
        "empmatchafter match %[^_~]%<* be [Nn][Ee][Tt](['’]s)?%>*%[_~^] 23",   //benet",
        "empmatchafter match %[^_~]%<* beneven [Tt] 12-26-15-1236-26",
        "empmatchafter match %[^_~]%<* be [Nn][Ee]![DFLTdflt] 23",               //bene*",
        "empmatchafter match %[^_~]%<* ben [Ii][AENOSUaenosu] 12-26",
        "sufword benomyl 12-26-135-134-13456-123",
        "empmatchafter match %[^_~]%<* be [Nn][AIOUaiou] 23",                    //ben*",
        "sufword beresford 12-12456-15-234-123456-145",
        "empmatchafter match %[^_~]%<* beresit [Ee] 12-12456-15-234-24-2345",
        "sufword berewick 12-12456-15-2456-24-14-13",
        "empmatchafter match %[^_~]%<* be [Rr][Hh][Yy][Mm] 23",
        "empmatchafter match %[^_~]%<* beribb [Oo][Nn] 23-1235-24-23",
        "empmatchafter match %[^_~]%<* berim [AEIOUYaeiouy] 23-1235-24-134",
        "empmatchafter match %[^_~]%<* bering [Ee][Dd] 23-1235-346",
        "empmatchafter match %[^_~]%<* bering [Ll][Ee][Tt] 23-1235-346",
        "empmatchafter match %[^_~]%<* be [Rr][AOUaou] 23",                        //bere*",
        "empmatchafter match %[^_~]%<* be [Rr][Ee]![NTZntz] 23",                   //ber*",
        "word best 12-15-34",
        "word bested 12-15-34-1246",
        "word bester 12-15-34-12456",
        "word bestest 12-15-34-15-34",
        "empmatchafter match %[^_~]%<* best [Ii][AEae] 12-15-34",
        "empmatchafter match %[^_~]%<* best [Ii][Cc][Uu] 12-15-34",
        "word besting 12-15-34-346",
        "word bestness 12-15-34-56-234",
        "empmatchafter match %[^_~]%<* best [Ss] 12-15-34", //  bests and bestsell*",
        "word besty 12-15-34-13456",
        "empmatchafter match %[^_~]%<* be [Ss]![Ss] 23",                     //bes*",
        "empmatchafter match %[^_~]%<* betafi [Tt][AEIOUaeiou] =",
        "word bete =",
        "word betes =",
        "sufword bethabar 23-1456-1-12-345",
        "sufword bethank 23-1456-1-1345-13",
        "sufword bethesda 23-2346-234-145-1",
        "sufword bethroot 12-15-1456-1235-135-135-2345",
        "sufword bethuel 12-15-1456-136-15-123",
        "sufword bethune 12-15-1456-136-1345-15",
        "empmatchafter match %[^_~]%<* bethylid [Aa][Ee] 23-1456-13456-123-24-145",
        "empmatchafter match %[^_~]%<* be [Tt][Hh][IORUWioruw]%a 23",
        "word betonies =",
        "word betony =",
        "match - betula [Cc] =",
        "match - betul [Ii][Nn] =",
        "empmatchafter match %[^_~]%<* be [Tt]![CHJKSTZchjkstz'’] 23",               //bet*",
        "empmatchafter match %[^_~]%<* beun [Ii] 23-136-1345 ",
        "empmatchafter match %[^_~]%<* be [Vv][Uu][Ee] 23",
        "sufword bewick =",
        "word bewit =",
        "word bewits =",
        "empmatchafter match %[^_~]%<* bew [BCDFGJKLMNPQSTVWXZbcdfgjklmnpqstvwxz] =",
        "empmatchafter match %[^_~]%<* bex [BCDFGHJKLMNPQRSTVWXZbcdfghjklmnpqrstvwxz] =",
        "empmatchafter match %[^_~]%<* bey [AOao][Nn]([Ss]?)[Tt] 23-13456",
        "empmatchafter match %[^_~]%<* be [BCEFGHIJKLMPQSTUVWXYZbcefghijklmpqstuvwxyz]([Ss]|['’][Ss])?%>*%[_~^] =", //   3 letter words",
        "empmatchafter match %[^_~]%<* be [BFJKMPQVWXZbfjkmpqvwxz][BFJKMPQVWXZbfjkmpqvwxz] =",  // "be" is not the first syllable",
        "empmatchafter match %[^_~]%<* be [BFHJKMOPQWXZbfhjkmopqwxz] 23",
        "nofor sufword be 23",
        "word beg =",
        "sufword   bein'   23-24-1345-3",
        "always    betws   12-15-2345-2456-234",
        //con
        "empmatchafter match %[^_~]%<* con [Cc]![Hh] 25",
        "empmatchafter match %[^_~]%<* con [Ee][Ss][Tt] 25",
        "empmatchafter match %[^_~]%<* con [Ss]%a 25  [Cc][Oo][Nn][Ss]", //"mod cons" 10.6.4",
        "empmatchafter match %[^_~]%<* con [ABDFGHIJLMNOPQRTUVWXYZabdfghijlmnopqrtuvwxyz] 25",
        "sufword conakry 14-135-1345-1-13-1235-13456",
        "sufword conan  14-135-1345-1-1345",
        "sufword conned 14-135-1345-1345-1246",
        "nofor begword con 25",
        //dis
        "word dish 145-24-146",
        "word disher 145-24-146-12456",
        "word dishers 145-24-146-12456-234",
        "match ^|!%a dishi ([Ee]([Rr]|([Ss][Tt]))) 145-24-146-24",
        "word dishy 145-24-146-13456",
        "word diss 145-24-234-234",
        "empmatchafter match %[^_~]%<* dis [Cc]([HLRhlr]?)[AEIOUYaeiouy] 256",
        "empmatchafter match %[^_~]%<* dis [Hh][Ee]![DSVdsv] 256",
        "empmatchafter match %[^_~]%<* dis [Hh]![BCDEFGHIKLMNPRTWbcdefghiklmnprtw'’] 256",
        "empmatchafter match %[^_~]%<* dis [Pp]![Ii] 256",
        "empmatchafter match %[^_~]%<* dis [ABDEFGIJLMNOQRSTUVWXYZabdefgijlmnoqrstuvwxyz] 256",
        "nofor begword dis 256",
        "word disulphide 145-24-234-136-123-1234-125-24-145-15",
        //ea
        "empmatchbefore empmatchafter match %a ea %a 2",
        "nofor always , 2",  //cheap fix, still fails with ,ea,ea,
        "nofor midword ea 2",
        "sufword areaway 345-2-2456-1-13456",
        "always battleax =",
        "match  %[^_~]%<* de [Aa][Cc][CKQTckqt] = ",
        "match  %[^_~]%<* deacetyl [AEIOUaeiou] =",
        "match  %[^_~]%<* de [Aa][Cc][Ii][Dd] = deacidify",
        "match  %[^_~]%<* de [Aa][Ee][Rr][Aa] = reaerate",
        "match  %[^_~]%<* de [Aa][Ff][Ff] = deafforest",
        "sufword deair =",
        "match %[^_~]%<* deal [Aa][Tt][EIei] =",
        "match %[^_~]%<* dealb [Aa][Tt][EIei] =",
        "sufword dealbumin 145-15-1-123-12-136-134-35",
        "sufword dealcohol =",
        "match %[^_~]%<* dealk [AYay][Ll] =",
        "begword deall = deallocate",
        "match %[^_~]%<* deambul [Aa][Tt][AEIOUaeiou] =",
        "match %[^_~]%<* deam [Ii][DNdn][AIai][STZstz][AEIaei] = deamidase, deaminization",
        "match %[^_~]%<* deanathemati [SZsz][AEIaei] 145-15-1-1345-1-2346-134-1-2345-24",
        "match %[^_~]%<* deanimal [Ii][SZsz][AEIaei] =",
        "sufword deanthropo 145-15-1-1345-1456-1235-135-1234-135",
        "begword deapp = deappetise",
        "sufword deash 145-15-1-146 deash",
        "begword deasp = deaspirate",
        "begword deass = deassign",
        "match  %[^_~]%<* deau [Rr] = deauriculate",
        "match  %[^_~]%<* deau [Tt][Hh] = deauthorise",
        "midendword eance 15-46-15 vengeance",
        "midendword eand 15-12346 meander",
        "always ear 15-345",
        "midendword eaway 15-1-2456-1-13456",
        "sufword flearidden 124-123-2-1235-24-145-145-26",
        "sufword geanticline 1245-15-1-1345-2345-24-14-123-35-15",
        "match - house [Aa][Gg][Ee][Nn][CTct] 125-1256-234-15",
        "sufword learig 123-2-1235-24-1245",
        "sufword limeade =",
        "sufword orangeade =",
        "always pineapple 1234-35-15-1-1234-1234-123-15",
        "always poleax =",
        "sufword preachiev 1234-1235-15-1-16-24-15-1236",
        "sufword preach 1234-1235-2-16",
        "sufword preakness 1234-1235-2-13-56-234",
        "match  %[^_~]%<* pre [Aa] = ", //default case for prea- words",
        "match  %[^_~]%<* re [Aa][Bb] = reabsorb",
        "match  %[^_~]%<* re [Aa][Cc][CKQckq] = reaccustom, reacknowledge",
        "match  %[^_~]%<* reacetyl [AEIOUaeiou] =",
        "sufword reachiev 1235-15-1-16-24-15-1236",
        "match  %[^_~]%<* re [Aa][Cc][Ii][Dd] = reacidify",
        "match  -  re [Aa][Cc][Tt] = react and all derivatives",
        "begword readap = readapt",
        "sufword readd = readd readdress",
        "match  %[^_~]%<* read [Hh][Ee][RSrs] = readhere and derivatives",
        "begword readj = readjust",
        "word readme 1235-2-145-134-15",
        "word readmes 1235-2-145-134-15-234",
        "begword readm = readmit",
        "sufword readonly 1235-2-145-135-1345-123-13456",
        "sufword readout 1235-2-145-1256-2345",
        "match  %[^_~]%<* re [Aa][Dd][Oo] = readopt readorn",
        "begword readv = readvance readvise",
        "match  %[^_~]%<* re [Aa][Ee][Rr][Aa] = reaerate",
        "match  %[^_~]%<* re [Aa][Ff][Ff] = reaffirm reafforest",
        "sufword reagan 1235-2-1245-1-1345",
        "match  %[^_~]%<* reag [Ee][Nn][CTct] = reagency reagent",
        "match  %[^_~]%<* re [Aa][Gg][Gg] = reaggregate",
        "sufword reagit = reagitate",
        "sufword reagr = reagree",
        "match  %[^_~]%<* re [Aa][Ll][Aa][Rr][Mm] = realarm",
        "match %[^_~]%<* re [Aa][Ll][Ee][Rr][Tt] = realert",
        "match  %[^_~]%<* re [Aa][Ll][Ii][Ee][Nn] = realienate",
        "begword realig = realign",
        "match %[^_~]%<* reall [AEIOUaeiou] = reallege reallocate but not really",
        "sufword realter 1235-15-1-123-2345-12456",
        "begword reamalg = reamalgamate",
        "sufword reamass = reamassment",
        "match %[^_~]%<* ream [BPbp] = reambitious reamputate",
        "sufword reamend 1235-15-1-134-26-145",
        "match %[^_~]%<* reamu [Ss]%a = reamuse",
        "begword rean = reanalyze, reanimate",
        "begword reapolog = reapologize",
        "begword reapp = reappear",
        "match %[^_~]%<* re [Aa][Ss][CKPSTckpst] =  reascend reask reaspire reassure reastonish",
        "sufword reasty 1235-2-34-13456",
        "begword reatt = reattach reattain",
        "match  %[^_~]%<* reau [Dd] = reaudition",
        "match ^|!%a reau [Tt][Hh] = reauthorise",
        "word reave 1235-2-1236-15",
        "word reaved 1235-2-1236-1246",
        "word reaves 1235-2-1236-15-234",
        "word reaving 1235-2-1236-346",
        "begword reav = reavail reaver reavoid ",
        "begword reaw = reawaken",
        "sufword seaway 234-2-2456-1-13456",
        "sufword tearoom 2345-2-1235-135-135-134",
        "begword unreass = unreassuring",
        "always wideawak =",
        "always wiseacr =",
        //bb
        "match %a bb %a 23",
        "sufword dumbbell 145-136-134-12-12-15-123-123",
        "sufword subbasement 234-136-12-12-1-234-15-56-2345",
        "sufword subbing 234-136-12-12-346",
        //cc
        "empmatchbefore empmatchafter match %a cc %a 25",
        "always cch 14-16", //  CH always takes priority",
        "match - cchildren ![AEIOUYaeiouy] 14-16-1345", //   edge case for test word",
        "nofor midword cc 25",
        "sufword arccosine 345-14-14-135-234-35-15",
        //ff
        "empmatchbefore empmatchafter match %a ff %a 235",
        "always ffor 124-123456", // FOR always has priority",
        "nofor midword ff 235",
        "sufword chifforobe 16-24-235-135-1235-135-12-15",
        //gg
        "empmatchbefore empmatchafter match %a gg %a 2356",
        "nofor midword gg 2356",
        //shortform words
        """match %[_~^]%<* conceive ([Ss]|['’][Ss])?%>*%[_~^] 25-14-1236""",
        """match %[_~^]%<* conceiving ([Ss]|['’][Ss])?%>*%[_~^] 25-14-1236-1245""",
        """match %[_~^]%<* deceive ([Ss]|['’][Ss])?%>*%[_~^] 145-14-1236""",
        """match %[_~^]%<* deceiving ([Ss]|['’][Ss])?%>*%[_~^] 145-14-1236-1245""",
        """match %[_~^]%<* declare ([Ss]|['’][Ss])?%>*%[_~^] 145-14-123""",
        """match %[_~^]%<* declaring ([Ss]|['’][Ss])?%>*%[_~^] 145-14-123-1245""",
        """match %[_~^]%<* perceive ([Ss]|['’][Ss])?%>*%[_~^] 1234-12456-14-1236""",
        """match %[_~^]%<* perceiving ([Ss]|['’][Ss])?%>*%[_~^] 1234-12456-14-1236-1245""",
        """match %[_~^]%<* receive ([Ss]|['’][Ss])?%>*%[_~^] 1235-14-1236""",
        """match %[_~^]%<* receiving ([Ss]|['’][Ss])?%>*%[_~^] 1235-14-1236-1245""",
        """match %[_~^]%<* rejoice ([Ss]|['’][Ss])?%>*%[_~^] 1235-245-14""",
        """match %[_~^]%<* rejoicing ([Ss]|['’][Ss])?%>*%[_~^] 1235-245-14-1245""",
        "nofor word conceive  25-14-1236",
        "nofor word conceiving  25-14-1236-1245",
        "nofor word deceive  145-14-1236",
        "nofor word deceiving  145-14-1236-1245",
        "nofor word declare  145-14-123",
        "nofor word declaring  145-14-123-1245",
        "nofor word perceive  1234-12456-14-1236",
        "nofor word perceiving  1234-12456-14-1236-1245",
        "nofor word receive  1235-14-1236",
        "nofor word receiving  1235-14-1236-1245",
        "nofor word rejoice  1235-245-14",
        "nofor word rejoicing  1235-245-14-1245",
        "nofor word conceives  25-14-1236-234",
        "nofor word conceivings  25-14-1236-1245-234",
        "nofor word deceives  145-14-1236-234",
        "nofor word deceivings  145-14-1236-1245-234",
        "nofor word declares  145-14-123-234",
        "nofor word declarings  145-14-123-1245-234",
        "nofor word perceives  1234-12456-14-1236-234",
        "nofor word perceivings  1234-12456-14-1236-1245-234",
        "nofor word receives  1235-14-1236-234",
        "nofor word receivings  1235-14-1236-1245-234",
        "nofor word rejoices  1235-245-14-234",
        "nofor word rejoicings  1235-245-14-1245-234",
        "nofor word conceive's  25-14-1236-3-234",
        "nofor word conceiving's  25-14-1236-1245-3-234",
        "nofor word deceive's  145-14-1236-3-234",
        "nofor word deceiving's  145-14-1236-1245-3-234",
        "nofor word declare's  145-14-123-3-234",
        "nofor word declaring's  145-14-123-1245-3-234",
        "nofor word perceive's  1234-12456-14-1236-3-234",
        "nofor word perceiving's  1234-12456-14-1236-1245-3-234",
        "nofor word receive's  1235-14-1236-3-234",
        "nofor word receiving's  1235-14-1236-1245-3-234",
        "nofor word rejoice's  1235-245-14-3-234",
        "nofor word rejoicing's  1235-245-14-1245-3-234",
        "word concv =       conceive",
        "word concvg =      conceiving",
        "contraction dcv    deceive",
        "contraction dcvg   deceiving",
        "contraction dcl    declare",
        "contraction dclg   declaring",
        "word percv =       perceive",
        "word percvg =      perceiving",
        "contraction rcv    receive",
        "contraction rcvg   receiving",
        "contraction rjc    rejoice",
        "contraction rjcg   rejoicing",
      )
    )

    //Sub and superscripts aren't listed in LibLouis
    val Unit16 = Unit(
      "Unit 16: Shapes and Omissions", listOf(
        """contraction \x25a0 ■""", //filled (solid) square
        """contraction \x25a1 □""", //square
        """contraction \x25a7 ▧""", //shaded square (upper left to lower right)
        """contraction \x25b2 ▲""", //filled (solid) (equilateral) triangle
        """contraction \x25b3 △""", //regular (equilateral) triangle
        """contraction \x25cb ○""", //circle
        """contraction \x25cd ◍""", //shaded circle
      )
    )

    //Final letter groupsigns
    val Unit17 = Unit(
      "Unit 17: Final-letter groupsigns", listOf(
        //ance
        "nofor midendword ance 46-15",
        "match %a ance - 46-15b",
        "noback pass2 [@6-46-15b]    @6-1-1345-14-15",
        "noback pass2 [@6-3-46-15b]  @6-3-1-1345-14-15",
        "noback pass2 [@46-15b]      @46-15",
        "sufword fiance 124-24-1-1345-14-15",   //should be fiancé
        //ound
        "nofor midendword ound 46-145",
        "match %a ound - 46-145b",
        "noback pass2 [@6-46-145b]   @6-1256-1345-145",        // (ou)nd
        "noback pass2 [@6-3-46-145b] @6-3-1256-1345-145",      // (ou)nd
        "noback pass2 [@46-145b]     @46-145",
        //less
        "nofor midendword less 46-234",
        "match %a less - 46-234b",
        "noback pass2 [@6-46-234b]    @6-123-15-234-234",
        "noback pass2 [@6-3-46-234b]  @6-3-123-15-234-234",
        "noback pass2 [@46-234b]      @46-234",
        //sion
        "nofor midendword sion 46-1345",
        "match %a sion - 46-1345b",
        "noback pass2 [@6-46-1345b]   @6-234-24-135-1345",
        "noback pass2 [@6-3-46-1345b] @6-3-234-24-135-1345",
        "noback pass2 [@46-1345b]     @46-1345",
        //ount
        "nofor midendword ount 46-2345",
        "match %a ount - 46-2345b",
        "noback pass2 [@6-46-2345b]   @6-1256-1345-2345      # (ou)nt",
        "noback pass2 [@6-3-46-2345b] @6-3-1256-1345-2345    # (ou)nt",
        "noback pass2 [@46-2345b]     @46-2345",
        //ence
        "nofor midendword ence 56-15",
        "match %a ence - 56-15b",
        "noback pass2 [@6-56-15b]    @6-26-14-15",       // (en)ce
        "noback pass2 [@6-3-56-15b]  @6-3-26-14-15",     // (en)ce
        "noback pass2 [@56-15b]      @56-15",
        //"midendword oence 135-26-14-15 electroencephalogram",
        "always encephal 26-14-15-1234-125-1-123",
        //ong
        "nofor midendword ong 56-1245",
        "match %a ong - 56-1245b",
        "noback pass2 [@6-56-1245b]   @6-135-1345-1245",
        "noback pass2 [@6-3-56-1245b] @6-3-135-1345-1245",
        "noback pass2 [@56-1245b]     @56-1245",
        "match - cannon [Gg][Aa][Tt][Ee] =",
        "match - lemon [Gg][Rr][Aa][Ss][Ss] =",
        "match - longhi ^|!%a 123-135-1345-126-24",
        "match - melon [Gg][Rr][Oo][Ww] =",
        "match - moon [Gg]%a = moonglow moongod ",
        "begword nong = nongraphical nongaseous nongovernmental",
        "match - schon [Gg][Aa][Uu][Ee][Rr] 234-16-135-1345",
        "sufword songhai 234-135-1345-126-1-24",
        //ful
        "nofor midendword ful 56-123",
        "match %a ful - 56-123b",
        "noback pass2 [@6-56-123b]    @6-124-136-123",
        "noback pass2 [@6-3-56-123b]  @6-3-124-136-123",
        "noback pass2 [@56-123b]      @56-123",
        "sufword overfull 135-1236-12456-124-136-123-123", //TODO:  check
        //tion
        "nofor midendword tion 56-1345",
        "match %a tion - 56-1345b",
        "noback pass2 [@6-56-1345b]   @6-2345-24-135-1345",
        "noback pass2 [@6-3-56-1345b] @6-3-2345-24-135-1345",
        "noback pass2 [@56-1345b]     @56-1345",
        "sufword cation 14-1-2345-24-135-1345",
        "always mention 134-26-56-1345", //TION has priority
        //ness
        "nofor midendword ness 56-234",
        "match %a ness - 56-234b",
        "noback pass2 [@6-56-234b]   @6-1345-15-234-234",
        "noback pass2 [@6-3-56-234b] @6-3-1345-15-234-234",
        "noback pass2 [@56-234b]     @56-234",
        "sufword chieftainess 16-24-15-124-2345-1-35-15-234-234",
        "sufword citizeness 14-24-2345-24-1356-26-15-234-234",
        "sufword heatheness 125-2-2346-1345-15-234-234",
        //ment
        "nofor midendword ment 56-2345",
        "match %a ment - 56-2345b",
        "noback pass2 [@6-56-2345b]    @6-134-26-2345",         // m(en)t
        "noback pass2 [@6-3-56-2345b]  @6-3-134-26-2345",          // m(en)t
        "noback pass2 [@56-2345b]      @56-2345",
        //ity
        "nofor midendword ity 56-13456",
        "match %a ity - 56-13456b",
        "noback pass2 [@6-56-13456b]    @6-24-2345-13456",
        "noback pass2 [@6-3-56-13456b]  @6-3-24-2345-13456",
        "noback pass2 [@56-13456b]      @56-13456",
        "word biscuity 12-24-234-14-136-24-2345-13456",
        "word dacoity 145-1-14-135-24-2345-13456",
        "word fruity 124-1235-136-24-2345-13456",
        "word hoity-toity 125-135-24-2345-13456-36-2345-135-24-2345-13456",
        "word rabbity 1235-1-23-24-2345-13456",
        "word pityard 1234-24-2345-13456-345-145",
        "sufword antitype 1-1345-2345-24-2345-13456-1234-15",
        "sufword captainess 14-1-1234-2345-1-24-35-15-234-234",
      )
    )

    val FullContracted = Unit(
      "Fully Contracted (Grade 2 UEB)", listOf()
    )

    //Index 0 signals the Contraction Relaxer to change the translator to UEB-Uncontracted, and have no added contractions.
    // The last index signals a change to UEB Grade 2, and to have no added contractions.
    val allUnits = listOf(
      FullUncontracted,
      Unit2,
      Unit3,
      Unit5,
      Unit6,
      Unit7,
      Unit9,
      Unit11,
      Unit12,
      Unit14,
      Unit15,
      Unit17,
      FullContracted
    )

  }

}
