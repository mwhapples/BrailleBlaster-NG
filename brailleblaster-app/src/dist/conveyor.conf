include required("/stdlib/jdk/21/amazon.conf")
include required("https://raw.githubusercontent.com/hydraulic-software/conveyor/master/configs/jvm/extract-native-libraries.conf")
include required(file("about.properties"))

app {
  license = "GPL-3.0-only"
  updates = background
  site {
    copy-to = "s3:conveyorbucket"
    s3 {
      endpoint = "https://api2.aphtech.org"
      region = "auto"
    }
  }
  machines = [windows.amd64, linux.amd64.glibc, linux.aarch64.glibc]
  inputs += "lib/*.jar"
  inputs += {
    from = "."
    remap = [
      "**"
      "-lib/*.jar"
      "-native/**"
      "-"${app.fsname}".jar"
      "-brailleblaster-mac.command"
      "-brailleblaster-nix.sh"
      "-conveyor.conf"
      "-output/**"
    ]
  }
  jvm {
    gui.main-class = org.brailleblaster.Main
    modules += java.desktop
    modules += java.naming
    modules += java.sql
    modules += jdk.zipfs
    file-encoding = UTF-8
    mac.options += "-XstartOnFirstThread"
    extract-native-libraries = true
    system-properties {
      jlouis.library.path = <libpath>
      mathcat.library.path = <libpath>
    }
    linux.options += "-Dtruffle.attach.library="<libpath>"/libtruffleattach.so"
    mac.options += "-Dtruffle.attach.library="<libpath>"/libtruffleattach.dylib"
    windows.options += "-Dtruffle.attach.library="<libpath>"\\truffleattach.dll"
  }
  icons = "icon.png"
  file-associations = [ .bbz ]
  linux {
    root-inputs += {
      from = "programData/fonts"
      to = "/usr/share/fonts/opentype/"
      remap = [ "*.otf" ]
    }
    debian.postinst = ${app.linux.debian.postinst}"""
      fc-cache -f -v
    """
    desktop-file."Desktop Entry".Categories = "GTK;Office;"
    amd64.glibc {
      inputs += "native/linux-x86_64/lib/*.jar"
      inputs += {
        from = "native/linux-x86_64"
        remap = [
          "**" -> native/linux-x86_64
          "-lib/*.jar"
        ]
      }
    }
    aarch64.glibc {
      inputs += "native/linux-aarch64/lib/*.jar"
      inputs += {
        from = "native/linux-aarch64"
        remap = [
          "**" -> native/linux-aarch64
          "-lib/*.jar"
        ]
      }
    }
  }
  mac {
    amd64 {
      info-plist.LSMinimumSystemVersion = 13.0.0
      inputs += "native/mac-x86_64/lib/*.jar"
      inputs += {
        from = "native/mac-x86_64"
        remap = [
          "**" -> native/mac-x86_64
          "-lib/*.jar"
        ]
      }
    }
    aarch64 {
      info-plist.LSMinimumSystemVersion = 15.0.0
      inputs += "native/mac-aarch64/lib/*.jar"
      inputs += {
        from = "native/mac-aarch64"
        remap = [
          "**" -> native/mac-aarch64
          "-lib/*.jar"
        ]
      }
    }
  }
  windows {
    amd64 {
      inputs += "native/windows-x86_64/lib/*.jar"
      inputs += {
        from = "native/windows-x86_64"
        remap = [
          "**" -> native/windows-x86_64
          "-lib/*.jar"
        ]
      }
    }
    manifests {
      msix {
        reinstall-if-required = true
      }
    }
  }
}

conveyor.compatibility-level = 18
